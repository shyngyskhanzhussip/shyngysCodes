server:
  port: 8080

spring:
  application:
    name: customers
  
  profiles:
    active: dev
  
  # Default PostgreSQL configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/customers_db
    username: admin
    password: password123
    driver-class-name: org.postgresql.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.demo.shyngys: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Development Profile (with Docker PostgreSQL)
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/customers_db
    username: admin
    password: password123

---
# Test Profile (with H2 in-memory database)
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:customers-test
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/customers_db}
    username: ${DATABASE_USERNAME:admin}
    password: ${DATABASE_PASSWORD:password123}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  
  logging:
    level:
      com.demo.shyngys: INFO
      org.springframework.web: INFO
      org.hibernate: INFO 